{% extends "base_module.py.j2" %}
{% block imports %}
from enum import Enum
{% endblock %}

{% macro metadata_name(name) -%}
_{{ name | underscore | upper }}_METADATA
{%- endmacro %}

{% block content %}
{%- for name, constant in constants.items() %}
{% if 'meta' in constant %}
{{ metadata_name(name) }} = {
    {% for entry in constant.meta %}
    {{ entry.value }}: (
        {%- for key, value in entry.items() if key != "value" -%}
            {% if value | is_string -%}
                {{ value | render_long_text(width=100, drop_whitespace=False) }}
            {%- else -%}
                {{ value }}
            {%- endif -%}
            {{ ", " }}
        {%- endfor -%}),
    {%- endfor %}
}
{% endif %}

class {{ name }}(Enum):
    {%- for entry in constant.enum %}
    {{ entry.name }} = {{ entry.value }}
    {%- endfor %}
    {%- if 'meta' in constant %}

    def __init__(self, value):
        super().__init__(value)
        {{ constant.meta[0].keys() | without("value") | join(", ") }} = {{ metadata_name(name) }}[value]
        {%- for key in constant.meta[0].keys() %}
        {%- if key != "value" %}
        self.{{ key }} = {{ key }}
        {%- endif %}
        {%- endfor %}
    {%- endif -%}
{% endfor %}
{% endblock %}