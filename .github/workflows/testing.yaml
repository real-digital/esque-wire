name: Style, Unit And Integration Tests
on:
  push:
    branches:
      - "*"
    tags-ignore:
      - "*"

jobs:
  test-style:
    name: Code style check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: "3.6"
          architecture: x64
      - name: Install required packages
        run: pip3 install pre-commit
      - name: Install pre-commit hooks
        run: pre-commit install --install-hooks
      - name: Run pre-commit hooks
        run: pre-commit run --all-files
      - name: Check changelog change
        if: "github.ref != 'refs/heads/master'"
        run: |
          (if cmp -s CHANGELOG.md <(git show origin/master:CHANGELOG.md); then
            echo 'Need to edit the changelog file!'
            echo 'Describe what you did, create new section "Next Release" if necessary.'
            exit 1
          fi)
  test-basic-unit-and-integration:
    if: "github.ref != 'refs/heads/release-prep' && github.ref != 'refs/heads/master'"
    name: Unit and Integration tests with Python ${{ matrix.python }} and kafka ${{ matrix.kafka }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
         - '3.6'
        kafka:
         - '2.1.1'
        include: &coverage_flag
          - python: '3.6'
            kafka: '2.1.1'
            coverage: true
    steps: &test_steps
      - uses: actions/checkout@v1
      - name: Fetch virtualenv cache
        uses: actions/cache@v1
        id: venv-cache
        with:
          path: .venv
          key: venv-${{ matrix.python }}-${{ hashFiles('poetry.lock') }}
      - name: Fetch kafka cache
        uses: actions/cache@v1
        id: kafka-cache
        with:
          path: tests/cluster_fixture/kafka_distributions
          key: kafka-${{ matrix.kafka }}
      - name: Setup python and install packages
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Install and configure poetry
        run: |
          pip3 install poetry
          poetry config virtualenvs.in-project true
      - name: Install esque-wire requirements
        run: |
          poetry install -vvv
      - name: Run tests
        env:
          KAFKA_VERSION: ${{ matrix.kafka }}
        run: |
          if [[ -n "${{ matrix.coverage }}" ]]; then
            poetry run -- pytest --cov=esque_wire -v tests
          else
            poetry run -- pytest -v tests
          fi
      - name: Upload coverage
        if: matrix.coverage
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          export BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          poetry run -- coveralls

  test-complete-unit-and-integration:
    if: "github.ref == 'refs/heads/release-prep' || github.ref == 'refs/heads/master'"
    name: Unit and Integration tests with Python ${{ matrix.python }} and kafka ${{ matrix.kafka }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
         - '3.6'
         - '3.7'
         - '3.8'
        kafka:
         - '1.1.1'
         - '2.0.0'
         - '2.1.1'
         - '2.4.1'
         - '2.5.0'
        include: *coverage_flag
    steps: *test_steps