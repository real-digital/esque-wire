##############################################
# Autogenerated module. Please don't modify. #
##############################################

from typing import Dict
from esque_wire.protocol.structs.write_txn_markers_response import (
    Partition,
    Topic,
    TransactionMarker,
    WriteTxnMarkersResponseData,
)

from esque_wire.protocol.serializers import (
    ArraySerializer,
    DataClassSerializer,
    Schema,
    int16Serializer,
    int32Serializer,
    int64Serializer,
    stringSerializer,
)


partitionSchemas: Dict[int, Schema] = {
    0: [
        ('partition', int32Serializer),
        ('error_code', int16Serializer),
    ],
}


partitionSerializers: Dict[int, DataClassSerializer[Partition]] = {
    version: DataClassSerializer(Partition, schema) for version, schema
    in partitionSchemas.items()
}


topicSchemas: Dict[int, Schema] = {
    0: [
        ('topic', stringSerializer),
        ('partitions', ArraySerializer(partitionSerializers[0])),
    ],
}


topicSerializers: Dict[int, DataClassSerializer[Topic]] = {
    version: DataClassSerializer(Topic, schema) for version, schema
    in topicSchemas.items()
}


transactionMarkerSchemas: Dict[int, Schema] = {
    0: [
        ('producer_id', int64Serializer),
        ('topics', ArraySerializer(topicSerializers[0])),
    ],
}


transactionMarkerSerializers: Dict[int, DataClassSerializer[TransactionMarker]] = {
    version: DataClassSerializer(TransactionMarker, schema) for version, schema
    in transactionMarkerSchemas.items()
}


writeTxnMarkersResponseDataSchemas: Dict[int, Schema] = {
    0: [
        ('transaction_markers', ArraySerializer(transactionMarkerSerializers[0])),
    ],
}


writeTxnMarkersResponseDataSerializers: Dict[int, DataClassSerializer[WriteTxnMarkersResponseData]] = {
    version: DataClassSerializer(WriteTxnMarkersResponseData, schema) for version, schema
    in writeTxnMarkersResponseDataSchemas.items()
}

