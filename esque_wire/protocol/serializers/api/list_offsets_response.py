###############################################################
# Autogenerated module. Please don't modify.                  #
# Edit according file in protocol_generator/templates instead #
###############################################################

from typing import Dict

from ...structs.api.list_offsets_response import ListOffsetsResponseData, PartitionResponse, Response
from ._main_serializers import (
    ArraySerializer,
    ClassSerializer,
    DummySerializer,
    Schema,
    errorCodeSerializer,
    int32Serializer,
    int64Serializer,
    stringSerializer,
)

partitionResponseSchemas: Dict[int, Schema] = {
    0: [
        ("partition", int32Serializer),
        ("error_code", errorCodeSerializer),
        (None, ArraySerializer(int64Serializer)),
        ("timestamp", DummySerializer(int64Serializer.default)),
        ("offset", DummySerializer(int64Serializer.default)),
        ("leader_epoch", DummySerializer(int32Serializer.default)),
    ],
    1: [
        ("partition", int32Serializer),
        ("error_code", errorCodeSerializer),
        ("timestamp", int64Serializer),
        ("offset", int64Serializer),
        ("leader_epoch", DummySerializer(int32Serializer.default)),
    ],
    2: [
        ("partition", int32Serializer),
        ("error_code", errorCodeSerializer),
        ("timestamp", int64Serializer),
        ("offset", int64Serializer),
        ("leader_epoch", DummySerializer(int32Serializer.default)),
    ],
    3: [
        ("partition", int32Serializer),
        ("error_code", errorCodeSerializer),
        ("timestamp", int64Serializer),
        ("offset", int64Serializer),
        ("leader_epoch", DummySerializer(int32Serializer.default)),
    ],
    4: [
        ("partition", int32Serializer),
        ("error_code", errorCodeSerializer),
        ("timestamp", int64Serializer),
        ("offset", int64Serializer),
        ("leader_epoch", int32Serializer),
    ],
    5: [
        ("partition", int32Serializer),
        ("error_code", errorCodeSerializer),
        ("timestamp", int64Serializer),
        ("offset", int64Serializer),
        ("leader_epoch", int32Serializer),
    ],
}


partitionResponseSerializers: Dict[int, ClassSerializer[PartitionResponse]] = {
    version: ClassSerializer(PartitionResponse, schema) for version, schema in partitionResponseSchemas.items()
}

partitionResponseSerializers[-1] = partitionResponseSerializers[5]


responseSchemas: Dict[int, Schema] = {
    0: [("topic", stringSerializer), ("partition_responses", ArraySerializer(partitionResponseSerializers[0]))],
    1: [("topic", stringSerializer), ("partition_responses", ArraySerializer(partitionResponseSerializers[1]))],
    2: [("topic", stringSerializer), ("partition_responses", ArraySerializer(partitionResponseSerializers[2]))],
    3: [("topic", stringSerializer), ("partition_responses", ArraySerializer(partitionResponseSerializers[3]))],
    4: [("topic", stringSerializer), ("partition_responses", ArraySerializer(partitionResponseSerializers[4]))],
    5: [("topic", stringSerializer), ("partition_responses", ArraySerializer(partitionResponseSerializers[5]))],
}


responseSerializers: Dict[int, ClassSerializer[Response]] = {
    version: ClassSerializer(Response, schema) for version, schema in responseSchemas.items()
}

responseSerializers[-1] = responseSerializers[5]


listOffsetsResponseDataSchemas: Dict[int, Schema] = {
    0: [("responses", ArraySerializer(responseSerializers[0])), ("throttle_time_ms", DummySerializer(0))],
    1: [("responses", ArraySerializer(responseSerializers[1])), ("throttle_time_ms", DummySerializer(0))],
    2: [("throttle_time_ms", int32Serializer), ("responses", ArraySerializer(responseSerializers[2]))],
    3: [("throttle_time_ms", int32Serializer), ("responses", ArraySerializer(responseSerializers[3]))],
    4: [("throttle_time_ms", int32Serializer), ("responses", ArraySerializer(responseSerializers[4]))],
    5: [("throttle_time_ms", int32Serializer), ("responses", ArraySerializer(responseSerializers[5]))],
}


listOffsetsResponseDataSerializers: Dict[int, ClassSerializer[ListOffsetsResponseData]] = {
    version: ClassSerializer(ListOffsetsResponseData, schema)
    for version, schema in listOffsetsResponseDataSchemas.items()
}

listOffsetsResponseDataSerializers[-1] = listOffsetsResponseDataSerializers[5]
