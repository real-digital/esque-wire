##############################################
# Autogenerated module. Please don't modify. #
##############################################

from typing import Dict
from ...structs.api.delete_acls_response import (
    DeleteAclsResponseData,
    FilterResponse,
    MatchingAcl,
)

from ._main_serializers import (
    ArraySerializer,
    DataClassSerializer,
    DummySerializer,
    Schema,
    aclOperationSerializer,
    aclPermissionTypeSerializer,
    errorCodeSerializer,
    int32Serializer,
    int8Serializer,
    nullableStringSerializer,
    resourceTypeSerializer,
    stringSerializer,
)


matchingAclSchemas: Dict[int, Schema] = {
    0: [
        ("error_code", errorCodeSerializer),
        ("error_message", nullableStringSerializer),
        ("resource_type", resourceTypeSerializer),
        ("resource_name", stringSerializer),
        ("principal", stringSerializer),
        ("host", stringSerializer),
        ("operation", aclOperationSerializer),
        ("permission_type", aclPermissionTypeSerializer),
        ("resource_pattern_type", DummySerializer(3)),
    ],
    1: [
        ("error_code", errorCodeSerializer),
        ("error_message", nullableStringSerializer),
        ("resource_type", resourceTypeSerializer),
        ("resource_name", stringSerializer),
        ("resource_pattern_type", int8Serializer),
        ("principal", stringSerializer),
        ("host", stringSerializer),
        ("operation", aclOperationSerializer),
        ("permission_type", aclPermissionTypeSerializer),
    ],
}


matchingAclSerializers: Dict[int, DataClassSerializer[MatchingAcl]] = {
    version: DataClassSerializer(MatchingAcl, schema)
    for version, schema in matchingAclSchemas.items()
}


filterResponseSchemas: Dict[int, Schema] = {
    0: [
        ("error_code", errorCodeSerializer),
        ("error_message", nullableStringSerializer),
        ("matching_acls", ArraySerializer(matchingAclSerializers[0])),
    ],
    1: [
        ("error_code", errorCodeSerializer),
        ("error_message", nullableStringSerializer),
        ("matching_acls", ArraySerializer(matchingAclSerializers[1])),
    ],
}


filterResponseSerializers: Dict[int, DataClassSerializer[FilterResponse]] = {
    version: DataClassSerializer(FilterResponse, schema)
    for version, schema in filterResponseSchemas.items()
}


deleteAclsResponseDataSchemas: Dict[int, Schema] = {
    0: [
        ("throttle_time_ms", int32Serializer),
        ("filter_responses", ArraySerializer(filterResponseSerializers[0])),
    ],
    1: [
        ("throttle_time_ms", int32Serializer),
        ("filter_responses", ArraySerializer(filterResponseSerializers[1])),
    ],
}


deleteAclsResponseDataSerializers: Dict[
    int, DataClassSerializer[DeleteAclsResponseData]
] = {
    version: DataClassSerializer(DeleteAclsResponseData, schema)
    for version, schema in deleteAclsResponseDataSchemas.items()
}
