###############################################################
# Autogenerated module. Please don't modify.                  #
# Edit according file in protocol_generator/templates instead #
###############################################################

from typing import Dict

from ...structs.api.offset_fetch_response import OffsetFetchResponseData, PartitionResponse, Response
from ._main_serializers import (
    ArraySerializer,
    ClassSerializer,
    DummySerializer,
    Schema,
    errorCodeSerializer,
    int32Serializer,
    int64Serializer,
    nullableStringSerializer,
    stringSerializer,
)

partitionResponseSchemas: Dict[int, Schema] = {
    0: [
        ("partition", int32Serializer),
        ("offset", int64Serializer),
        ("metadata", nullableStringSerializer),
        ("error_code", errorCodeSerializer),
        ("leader_epoch", DummySerializer(int32Serializer.default)),
    ],
    1: [
        ("partition", int32Serializer),
        ("offset", int64Serializer),
        ("metadata", nullableStringSerializer),
        ("error_code", errorCodeSerializer),
        ("leader_epoch", DummySerializer(int32Serializer.default)),
    ],
    2: [
        ("partition", int32Serializer),
        ("offset", int64Serializer),
        ("metadata", nullableStringSerializer),
        ("error_code", errorCodeSerializer),
        ("leader_epoch", DummySerializer(int32Serializer.default)),
    ],
    3: [
        ("partition", int32Serializer),
        ("offset", int64Serializer),
        ("metadata", nullableStringSerializer),
        ("error_code", errorCodeSerializer),
        ("leader_epoch", DummySerializer(int32Serializer.default)),
    ],
    4: [
        ("partition", int32Serializer),
        ("offset", int64Serializer),
        ("metadata", nullableStringSerializer),
        ("error_code", errorCodeSerializer),
        ("leader_epoch", DummySerializer(int32Serializer.default)),
    ],
    5: [
        ("partition", int32Serializer),
        ("offset", int64Serializer),
        ("leader_epoch", int32Serializer),
        ("metadata", nullableStringSerializer),
        ("error_code", errorCodeSerializer),
    ],
}


partitionResponseSerializers: Dict[int, ClassSerializer[PartitionResponse]] = {
    version: ClassSerializer(PartitionResponse, schema) for version, schema in partitionResponseSchemas.items()
}

partitionResponseSerializers[-1] = partitionResponseSerializers[5]


responseSchemas: Dict[int, Schema] = {
    0: [("topic", stringSerializer), ("partition_responses", ArraySerializer(partitionResponseSerializers[0]))],
    1: [("topic", stringSerializer), ("partition_responses", ArraySerializer(partitionResponseSerializers[1]))],
    2: [("topic", stringSerializer), ("partition_responses", ArraySerializer(partitionResponseSerializers[2]))],
    3: [("topic", stringSerializer), ("partition_responses", ArraySerializer(partitionResponseSerializers[3]))],
    4: [("topic", stringSerializer), ("partition_responses", ArraySerializer(partitionResponseSerializers[4]))],
    5: [("topic", stringSerializer), ("partition_responses", ArraySerializer(partitionResponseSerializers[5]))],
}


responseSerializers: Dict[int, ClassSerializer[Response]] = {
    version: ClassSerializer(Response, schema) for version, schema in responseSchemas.items()
}

responseSerializers[-1] = responseSerializers[5]


offsetFetchResponseDataSchemas: Dict[int, Schema] = {
    0: [
        ("responses", ArraySerializer(responseSerializers[0])),
        ("throttle_time_ms", DummySerializer(0)),
        ("error_code", DummySerializer(errorCodeSerializer.default)),
    ],
    1: [
        ("responses", ArraySerializer(responseSerializers[1])),
        ("throttle_time_ms", DummySerializer(0)),
        ("error_code", DummySerializer(errorCodeSerializer.default)),
    ],
    2: [
        ("responses", ArraySerializer(responseSerializers[2])),
        ("error_code", errorCodeSerializer),
        ("throttle_time_ms", DummySerializer(0)),
    ],
    3: [
        ("throttle_time_ms", int32Serializer),
        ("responses", ArraySerializer(responseSerializers[3])),
        ("error_code", errorCodeSerializer),
    ],
    4: [
        ("throttle_time_ms", int32Serializer),
        ("responses", ArraySerializer(responseSerializers[4])),
        ("error_code", errorCodeSerializer),
    ],
    5: [
        ("throttle_time_ms", int32Serializer),
        ("responses", ArraySerializer(responseSerializers[5])),
        ("error_code", errorCodeSerializer),
    ],
}


offsetFetchResponseDataSerializers: Dict[int, ClassSerializer[OffsetFetchResponseData]] = {
    version: ClassSerializer(OffsetFetchResponseData, schema)
    for version, schema in offsetFetchResponseDataSchemas.items()
}

offsetFetchResponseDataSerializers[-1] = offsetFetchResponseDataSerializers[5]
