###############################################################
# Autogenerated module. Please don't modify.                  #
# Edit according file in protocol_generator/templates instead #
###############################################################

from typing import Dict

from ...structs.api.offset_commit_response import OffsetCommitResponseData, Partition, Topic
from ._main_serializers import (
    ArraySerializer,
    ClassSerializer,
    DummySerializer,
    Schema,
    errorCodeSerializer,
    int32Serializer,
    stringSerializer,
)

partitionSchemas: Dict[int, Schema] = {
    0: [("partition_index", int32Serializer), ("error_code", errorCodeSerializer)],
    1: [("partition_index", int32Serializer), ("error_code", errorCodeSerializer)],
    2: [("partition_index", int32Serializer), ("error_code", errorCodeSerializer)],
    3: [("partition_index", int32Serializer), ("error_code", errorCodeSerializer)],
    4: [("partition_index", int32Serializer), ("error_code", errorCodeSerializer)],
    5: [("partition_index", int32Serializer), ("error_code", errorCodeSerializer)],
    6: [("partition_index", int32Serializer), ("error_code", errorCodeSerializer)],
    7: [("partition_index", int32Serializer), ("error_code", errorCodeSerializer)],
}


partitionSerializers: Dict[int, ClassSerializer[Partition]] = {
    version: ClassSerializer(Partition, schema) for version, schema in partitionSchemas.items()
}

partitionSerializers[-1] = partitionSerializers[7]


topicSchemas: Dict[int, Schema] = {
    0: [("name", stringSerializer), ("partitions", ArraySerializer(partitionSerializers[0]))],
    1: [("name", stringSerializer), ("partitions", ArraySerializer(partitionSerializers[1]))],
    2: [("name", stringSerializer), ("partitions", ArraySerializer(partitionSerializers[2]))],
    3: [("name", stringSerializer), ("partitions", ArraySerializer(partitionSerializers[3]))],
    4: [("name", stringSerializer), ("partitions", ArraySerializer(partitionSerializers[4]))],
    5: [("name", stringSerializer), ("partitions", ArraySerializer(partitionSerializers[5]))],
    6: [("name", stringSerializer), ("partitions", ArraySerializer(partitionSerializers[6]))],
    7: [("name", stringSerializer), ("partitions", ArraySerializer(partitionSerializers[7]))],
}


topicSerializers: Dict[int, ClassSerializer[Topic]] = {
    version: ClassSerializer(Topic, schema) for version, schema in topicSchemas.items()
}

topicSerializers[-1] = topicSerializers[7]


offsetCommitResponseDataSchemas: Dict[int, Schema] = {
    0: [
        ("topics", ArraySerializer(topicSerializers[0])),
        ("throttle_time_ms", DummySerializer(int32Serializer.default)),
    ],
    1: [
        ("topics", ArraySerializer(topicSerializers[1])),
        ("throttle_time_ms", DummySerializer(int32Serializer.default)),
    ],
    2: [
        ("topics", ArraySerializer(topicSerializers[2])),
        ("throttle_time_ms", DummySerializer(int32Serializer.default)),
    ],
    3: [("throttle_time_ms", int32Serializer), ("topics", ArraySerializer(topicSerializers[3]))],
    4: [("throttle_time_ms", int32Serializer), ("topics", ArraySerializer(topicSerializers[4]))],
    5: [("throttle_time_ms", int32Serializer), ("topics", ArraySerializer(topicSerializers[5]))],
    6: [("throttle_time_ms", int32Serializer), ("topics", ArraySerializer(topicSerializers[6]))],
    7: [("throttle_time_ms", int32Serializer), ("topics", ArraySerializer(topicSerializers[7]))],
}


offsetCommitResponseDataSerializers: Dict[int, ClassSerializer[OffsetCommitResponseData]] = {
    version: ClassSerializer(OffsetCommitResponseData, schema)
    for version, schema in offsetCommitResponseDataSchemas.items()
}

offsetCommitResponseDataSerializers[-1] = offsetCommitResponseDataSerializers[7]
