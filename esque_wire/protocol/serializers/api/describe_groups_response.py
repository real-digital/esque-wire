###############################################################
# Autogenerated module. Please don't modify.                  #
# Edit according file in protocol_generator/templates instead #
###############################################################

from typing import Dict

from ...structs.api.describe_groups_response import DescribeGroupsResponseData, Group, Member
from ._main_serializers import (
    ArraySerializer,
    ClassSerializer,
    DummySerializer,
    Schema,
    bytesSerializer,
    errorCodeSerializer,
    int32Serializer,
    stringSerializer,
)

memberSchemas: Dict[int, Schema] = {
    0: [
        ("member_id", stringSerializer),
        ("client_id", stringSerializer),
        ("client_host", stringSerializer),
        ("member_metadata", bytesSerializer),
        ("member_assignment", bytesSerializer),
    ],
    1: [
        ("member_id", stringSerializer),
        ("client_id", stringSerializer),
        ("client_host", stringSerializer),
        ("member_metadata", bytesSerializer),
        ("member_assignment", bytesSerializer),
    ],
    2: [
        ("member_id", stringSerializer),
        ("client_id", stringSerializer),
        ("client_host", stringSerializer),
        ("member_metadata", bytesSerializer),
        ("member_assignment", bytesSerializer),
    ],
    3: [
        ("member_id", stringSerializer),
        ("client_id", stringSerializer),
        ("client_host", stringSerializer),
        ("member_metadata", bytesSerializer),
        ("member_assignment", bytesSerializer),
    ],
}


memberSerializers: Dict[int, ClassSerializer[Member]] = {
    version: ClassSerializer(Member, schema) for version, schema in memberSchemas.items()
}

memberSerializers[-1] = memberSerializers[3]


groupSchemas: Dict[int, Schema] = {
    0: [
        ("error_code", errorCodeSerializer),
        ("group_id", stringSerializer),
        ("group_state", stringSerializer),
        ("protocol_type", stringSerializer),
        ("protocol_data", stringSerializer),
        ("members", ArraySerializer(memberSerializers[0])),
        ("authorized_operations", DummySerializer(int32Serializer.default)),
    ],
    1: [
        ("error_code", errorCodeSerializer),
        ("group_id", stringSerializer),
        ("group_state", stringSerializer),
        ("protocol_type", stringSerializer),
        ("protocol_data", stringSerializer),
        ("members", ArraySerializer(memberSerializers[1])),
        ("authorized_operations", DummySerializer(int32Serializer.default)),
    ],
    2: [
        ("error_code", errorCodeSerializer),
        ("group_id", stringSerializer),
        ("group_state", stringSerializer),
        ("protocol_type", stringSerializer),
        ("protocol_data", stringSerializer),
        ("members", ArraySerializer(memberSerializers[2])),
        ("authorized_operations", DummySerializer(int32Serializer.default)),
    ],
    3: [
        ("error_code", errorCodeSerializer),
        ("group_id", stringSerializer),
        ("group_state", stringSerializer),
        ("protocol_type", stringSerializer),
        ("protocol_data", stringSerializer),
        ("members", ArraySerializer(memberSerializers[3])),
        ("authorized_operations", int32Serializer),
    ],
}


groupSerializers: Dict[int, ClassSerializer[Group]] = {
    version: ClassSerializer(Group, schema) for version, schema in groupSchemas.items()
}

groupSerializers[-1] = groupSerializers[3]


describeGroupsResponseDataSchemas: Dict[int, Schema] = {
    0: [
        ("groups", ArraySerializer(groupSerializers[0])),
        ("throttle_time_ms", DummySerializer(int32Serializer.default)),
    ],
    1: [("throttle_time_ms", int32Serializer), ("groups", ArraySerializer(groupSerializers[1]))],
    2: [("throttle_time_ms", int32Serializer), ("groups", ArraySerializer(groupSerializers[2]))],
    3: [("throttle_time_ms", int32Serializer), ("groups", ArraySerializer(groupSerializers[3]))],
}


describeGroupsResponseDataSerializers: Dict[int, ClassSerializer[DescribeGroupsResponseData]] = {
    version: ClassSerializer(DescribeGroupsResponseData, schema)
    for version, schema in describeGroupsResponseDataSchemas.items()
}

describeGroupsResponseDataSerializers[-1] = describeGroupsResponseDataSerializers[3]
